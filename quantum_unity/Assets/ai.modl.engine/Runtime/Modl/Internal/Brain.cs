// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: brain.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Modl.Proto {

  /// <summary>Holder for reflection information generated from brain.proto</summary>
  public static partial class BrainReflection {

    #region Descriptor
    /// <summary>File descriptor for brain.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BrainReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgticmFpbi5wcm90bxIKbW9kbC5wcm90bxocZ29vZ2xlL3Byb3RvYnVmL3N0",
            "cnVjdC5wcm90byJ7CgVFdmVudBIOCgJpZBgBIAEoCVICaWQSEgoEbmFtZRgC",
            "IAEoCVIEbmFtZRIcCgl0aW1lc3RhbXAYAyABKANSCXRpbWVzdGFtcBIwCgdw",
            "YXlsb2FkGAQgAygLMhYuZ29vZ2xlLnByb3RvYnVmLlZhbHVlUgdwYXlsb2Fk",
            "Ij4KDEFjdGlvblZlY3RvchIuCgZ2YWx1ZXMYASADKAsyFi5nb29nbGUucHJv",
            "dG9idWYuVmFsdWVSBnZhbHVlcyKQAQoMT2JqZWN0VmVjdG9yEh0KCnJ1bnRp",
            "bWVfaWQYASABKAlSCXJ1bnRpbWVJZBIhCgxydW50aW1lX25hbWUYAiABKAlS",
            "C3J1bnRpbWVOYW1lEg4KAmlkGAMgASgJUgJpZBIuCgZ2YWx1ZXMYBCADKAsy",
            "Fi5nb29nbGUucHJvdG9idWYuVmFsdWVSBnZhbHVlcyInCg1GZWF0dXJlVmVj",
            "dG9yEhYKBnZhbHVlcxgBIAMoAlIGdmFsdWVzIiYKDFNlbnNvclZlY3RvchIW",
            "CgZ2YWx1ZXMYASADKAJSBnZhbHVlcyK3AgoLT2JzZXJ2YXRpb24SDgoCaWQY",
            "ASABKAlSAmlkEjIKB29iamVjdHMYAiADKAsyGC5tb2RsLnByb3RvLk9iamVj",
            "dFZlY3RvclIHb2JqZWN0cxI1CghmZWF0dXJlcxgDIAMoCzIZLm1vZGwucHJv",
            "dG8uRmVhdHVyZVZlY3RvclIIZmVhdHVyZXMSMgoHYWN0aW9ucxgEIAMoCzIY",
            "Lm1vZGwucHJvdG8uQWN0aW9uVmVjdG9yUgdhY3Rpb25zEjIKB3NlbnNvcnMY",
            "BSADKAsyGC5tb2RsLnByb3RvLlNlbnNvclZlY3RvclIHc2Vuc29ycxIpCgZl",
            "dmVudHMYBiADKAsyES5tb2RsLnByb3RvLkV2ZW50UgZldmVudHMSGgoIdGVy",
            "bWluYWwYByABKAhSCHRlcm1pbmFsIvYBCgdDb21tYW5kEiwKBHR5cGUYASAB",
            "KA4yGC5tb2RsLnByb3RvLkNvbW1hbmQuVHlwZVIEdHlwZRIyCgdhY3Rpb25z",
            "GAIgAygLMhgubW9kbC5wcm90by5BY3Rpb25WZWN0b3JSB2FjdGlvbnMSMgoH",
            "b2JqZWN0cxgDIAMoCzIYLm1vZGwucHJvdG8uT2JqZWN0VmVjdG9yUgdvYmpl",
            "Y3RzEhUKBm9ic19pZBgEIAEoCVIFb2JzSWQiPgoEVHlwZRILCgdVTktOT1dO",
            "EAASBwoDQUNUEAESCAoETE9BRBACEggKBFNBVkUQAxIMCghTSFVURE9XThAE",
            "IpIBCg5Jbml0aWFsaXphdGlvbhIyChVzdGFydGluZ19jb25kaXRpb25faWQY",
            "ASABKAlSE3N0YXJ0aW5nQ29uZGl0aW9uSWQSLQoSaGVhcnRiZWF0X2ludGVy",
            "dmFsGAIgASgCUhFoZWFydGJlYXRJbnRlcnZhbBIdCgpnYW1lX3NwZWVkGAMg",
            "ASgCUglnYW1lU3BlZWQilgMKClZhbHVlUmFuZ2USDgoCaWQYASABKAlSAmlk",
            "EhIKBG5hbWUYAiABKAlSBG5hbWUSLwoEdHlwZRgDIAEoDjIbLm1vZGwucHJv",
            "dG8uVmFsdWVSYW5nZS5UeXBlUgR0eXBlEioKBGRpbXMYBCADKAsyFi5tb2Rs",
            "LnByb3RvLlZhbHVlUmFuZ2VSBGRpbXMSGwoJbWluX3ZhbHVlGAUgASgCUght",
            "aW5WYWx1ZRIbCgltYXhfdmFsdWUYBiABKAJSCG1heFZhbHVlEh4KCmNhdGVn",
            "b3JpZXMYByADKAlSCmNhdGVnb3JpZXMSEgoEdGFncxgIIAMoCVIEdGFncyKY",
            "AQoEVHlwZRILCgdVTktOT1dOEAASCQoFU1BBQ0UQARIWChJESVNDUkVURV9E",
            "SU1FTlNJT04QAhIYChRDT05USU5VT1VTX0RJTUVOU0lPThADEhUKEUJPT0xF",
            "QU5fRElNRU5TSU9OEAQSGQoVQ0FURUdPUklDQUxfRElNRU5TSU9OEAUSFAoQ",
            "U1RSSU5HX0RJTUVOU0lPThAGIi4KCFN0YXJ0RGVmEg4KAmlkGAEgASgJUgJp",
            "ZBISCgRuYW1lGAIgASgJUgRuYW1lIpkBCghFdmVudERlZhIOCgJpZBgBIAEo",
            "CVICaWQSEgoEbmFtZRgCIAEoCVIEbmFtZRItCgR0eXBlGAMgASgOMhkubW9k",
            "bC5wcm90by5FdmVudERlZi5UeXBlUgR0eXBlIjoKBFR5cGUSCwoHVU5LTk9X",
            "ThAAEgoKBkNVU1RPTRABEgoKBkdMSVRDSBACEg0KCU9CSkVDVElWRRADItMD",
            "CgpHYW1lQ29uZmlnEjkKDGFjdGlvbl9zcGFjZRgBIAEoCzIWLm1vZGwucHJv",
            "dG8uVmFsdWVSYW5nZVILYWN0aW9uU3BhY2USOwoNZmVhdHVyZV9zcGFjZRgC",
            "IAEoCzIWLm1vZGwucHJvdG8uVmFsdWVSYW5nZVIMZmVhdHVyZVNwYWNlEjkK",
            "DG9iamVjdF9zcGFjZRgDIAEoCzIWLm1vZGwucHJvdG8uVmFsdWVSYW5nZVIL",
            "b2JqZWN0U3BhY2USOQoMc2Vuc29yX3NwYWNlGAQgASgLMhYubW9kbC5wcm90",
            "by5WYWx1ZVJhbmdlUgtzZW5zb3JTcGFjZRIzCgpldmVudF9kZWZzGAUgAygL",
            "MhQubW9kbC5wcm90by5FdmVudERlZlIJZXZlbnREZWZzEjMKCnN0YXJ0X2Rl",
            "ZnMYBiADKAsyFC5tb2RsLnByb3RvLlN0YXJ0RGVmUglzdGFydERlZnMSLwoT",
            "ZmVhdHVyZV9ncmFudWxhcml0eRgHIAMoAlISZmVhdHVyZUdyYW51bGFyaXR5",
            "EhcKB21pbl9mcHMYCCABKAJSBm1pbkZwcxIjCg1icmFpbl92ZXJzaW9uGAkg",
            "ASgJUgxicmFpblZlcnNpb24iswEKC0Vudmlyb25tZW50EhIKBG5hbWUYASAB",
            "KAlSBG5hbWUSMAoEdHlwZRgCIAEoDjIcLm1vZGwucHJvdG8uRW52aXJvbm1l",
            "bnQuVHlwZVIEdHlwZRIvCgZjb25maWcYDCABKAsyFy5nb29nbGUucHJvdG9i",
            "dWYuU3RydWN0UgZjb25maWciLQoEVHlwZRILCgdVTktOT1dOEAASCgoGUkVN",
            "T1RFEAESDAoISU5URVJOQUwQAiJQCglBbGdvcml0aG0SEgoEbmFtZRgBIAEo",
            "CVIEbmFtZRIvCgZjb25maWcYAiABKAsyFy5nb29nbGUucHJvdG9idWYuU3Ry",
            "dWN0UgZjb25maWciagoIUHJvZmlsZXISGAoHZW5hYmxlZBgBIAEoCFIHZW5h",
            "YmxlZBISCgRwb3J0GAIgASgFUgRwb3J0EhIKBGZpbGUYAyABKAlSBGZpbGUS",
            "HAoJZnJlcXVlbmN5GAQgASgFUglmcmVxdWVuY3ki5wEKA1J1bhIYCgdzZWNv",
            "bmRzGAEgASgFUgdzZWNvbmRzEjkKC2Vudmlyb25tZW50GAIgASgLMhcubW9k",
            "bC5wcm90by5FbnZpcm9ubWVudFILZW52aXJvbm1lbnQSMwoJYWxnb3JpdGht",
            "GAMgASgLMhUubW9kbC5wcm90by5BbGdvcml0aG1SCWFsZ29yaXRobRIwCghw",
            "cm9maWxlchgEIAEoCzIULm1vZGwucHJvdG8uUHJvZmlsZXJSCHByb2ZpbGVy",
            "EhIKBHNlZWQYBSABKAVSBHNlZWQSEAoDZ3B1GAYgASgIUgNncHUiLwoKVGVz",
            "dENvbmZpZxIhCgNydW4YASABKAsyDy5tb2RsLnByb3RvLlJ1blIDcnVuIpcB",
            "CgtTaGFyZWRFbnRyeRIZCghlbnRyeV9pZBgBIAEoCVIHZW50cnlJZBI5Cgtv",
            "YnNlcnZhdGlvbhgCIAEoCzIXLm1vZGwucHJvdG8uT2JzZXJ2YXRpb25SC29i",
            "c2VydmF0aW9uEjIKB2FjdGlvbnMYAyADKAsyGC5tb2RsLnByb3RvLkFjdGlv",
            "blZlY3RvclIHYWN0aW9uc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.Event), global::Modl.Proto.Event.Parser, new[]{ "Id", "Name", "Timestamp", "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.ActionVector), global::Modl.Proto.ActionVector.Parser, new[]{ "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.ObjectVector), global::Modl.Proto.ObjectVector.Parser, new[]{ "RuntimeId", "RuntimeName", "Id", "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.FeatureVector), global::Modl.Proto.FeatureVector.Parser, new[]{ "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.SensorVector), global::Modl.Proto.SensorVector.Parser, new[]{ "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.Observation), global::Modl.Proto.Observation.Parser, new[]{ "Id", "Objects", "Features", "Actions", "Sensors", "Events", "Terminal" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.Command), global::Modl.Proto.Command.Parser, new[]{ "Type", "Actions", "Objects", "ObsId" }, null, new[]{ typeof(global::Modl.Proto.Command.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.Initialization), global::Modl.Proto.Initialization.Parser, new[]{ "StartingConditionId", "HeartbeatInterval", "GameSpeed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.ValueRange), global::Modl.Proto.ValueRange.Parser, new[]{ "Id", "Name", "Type", "Dims", "MinValue", "MaxValue", "Categories", "Tags" }, null, new[]{ typeof(global::Modl.Proto.ValueRange.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.StartDef), global::Modl.Proto.StartDef.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.EventDef), global::Modl.Proto.EventDef.Parser, new[]{ "Id", "Name", "Type" }, null, new[]{ typeof(global::Modl.Proto.EventDef.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.GameConfig), global::Modl.Proto.GameConfig.Parser, new[]{ "ActionSpace", "FeatureSpace", "ObjectSpace", "SensorSpace", "EventDefs", "StartDefs", "FeatureGranularity", "MinFps", "BrainVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.Environment), global::Modl.Proto.Environment.Parser, new[]{ "Name", "Type", "Config" }, null, new[]{ typeof(global::Modl.Proto.Environment.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.Algorithm), global::Modl.Proto.Algorithm.Parser, new[]{ "Name", "Config" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.Profiler), global::Modl.Proto.Profiler.Parser, new[]{ "Enabled", "Port", "File", "Frequency" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.Run), global::Modl.Proto.Run.Parser, new[]{ "Seconds", "Environment", "Algorithm", "Profiler", "Seed", "Gpu" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.TestConfig), global::Modl.Proto.TestConfig.Parser, new[]{ "Run" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modl.Proto.SharedEntry), global::Modl.Proto.SharedEntry.Parser, new[]{ "EntryId", "Observation", "Actions" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Event : pb::IMessage<Event>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event(Event other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      timestamp_ = other.timestamp_;
      payload_ = other.payload_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Value> _repeated_payload_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Protobuf.WellKnownTypes.Value.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Value> payload_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Value>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Value> Payload {
      get { return payload_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Timestamp != other.Timestamp) return false;
      if(!payload_.Equals(other.payload_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      hash ^= payload_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      payload_.WriteTo(output, _repeated_payload_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      payload_.WriteTo(ref output, _repeated_payload_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      size += payload_.CalculateSize(_repeated_payload_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      payload_.Add(other.payload_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 34: {
            payload_.AddEntriesFrom(input, _repeated_payload_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 34: {
            payload_.AddEntriesFrom(ref input, _repeated_payload_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActionVector : pb::IMessage<ActionVector>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActionVector> _parser = new pb::MessageParser<ActionVector>(() => new ActionVector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActionVector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionVector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionVector(ActionVector other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionVector Clone() {
      return new ActionVector(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Value> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.WellKnownTypes.Value.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Value> values_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Value>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Value> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActionVector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActionVector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActionVector other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjectVector : pb::IMessage<ObjectVector>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectVector> _parser = new pb::MessageParser<ObjectVector>(() => new ObjectVector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectVector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectVector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectVector(ObjectVector other) : this() {
      runtimeId_ = other.runtimeId_;
      runtimeName_ = other.runtimeName_;
      id_ = other.id_;
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectVector Clone() {
      return new ObjectVector(this);
    }

    /// <summary>Field number for the "runtime_id" field.</summary>
    public const int RuntimeIdFieldNumber = 1;
    private string runtimeId_ = "";
    /// <summary>
    /// Runtime ID of the entity (formerly ID)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RuntimeId {
      get { return runtimeId_; }
      set {
        runtimeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "runtime_name" field.</summary>
    public const int RuntimeNameFieldNumber = 2;
    private string runtimeName_ = "";
    /// <summary>
    /// Pretty name of the runtime entity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RuntimeName {
      get { return runtimeName_; }
      set {
        runtimeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private string id_ = "";
    /// <summary>
    /// ID of the entity type used to identify the object definition in the game config (formerly name)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Value> _repeated_values_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Protobuf.WellKnownTypes.Value.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Value> values_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Value>();
    /// <summary>
    /// Key refers to the name of the dimension that values belong to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Value> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectVector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectVector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RuntimeId != other.RuntimeId) return false;
      if (RuntimeName != other.RuntimeName) return false;
      if (Id != other.Id) return false;
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RuntimeId.Length != 0) hash ^= RuntimeId.GetHashCode();
      if (RuntimeName.Length != 0) hash ^= RuntimeName.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RuntimeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RuntimeId);
      }
      if (RuntimeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RuntimeName);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RuntimeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RuntimeId);
      }
      if (RuntimeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RuntimeName);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RuntimeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RuntimeId);
      }
      if (RuntimeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RuntimeName);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectVector other) {
      if (other == null) {
        return;
      }
      if (other.RuntimeId.Length != 0) {
        RuntimeId = other.RuntimeId;
      }
      if (other.RuntimeName.Length != 0) {
        RuntimeName = other.RuntimeName;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RuntimeId = input.ReadString();
            break;
          }
          case 18: {
            RuntimeName = input.ReadString();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RuntimeId = input.ReadString();
            break;
          }
          case 18: {
            RuntimeName = input.ReadString();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FeatureVector : pb::IMessage<FeatureVector>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeatureVector> _parser = new pb::MessageParser<FeatureVector>(() => new FeatureVector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureVector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureVector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureVector(FeatureVector other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureVector Clone() {
      return new FeatureVector(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_values_codec
        = pb::FieldCodec.ForFloat(10);
    private readonly pbc::RepeatedField<float> values_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureVector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureVector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureVector other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 13: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 13: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SensorVector : pb::IMessage<SensorVector>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SensorVector> _parser = new pb::MessageParser<SensorVector>(() => new SensorVector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SensorVector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorVector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorVector(SensorVector other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SensorVector Clone() {
      return new SensorVector(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_values_codec
        = pb::FieldCodec.ForFloat(10);
    private readonly pbc::RepeatedField<float> values_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SensorVector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SensorVector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SensorVector other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 13: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 13: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Observation : pb::IMessage<Observation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Observation> _parser = new pb::MessageParser<Observation>(() => new Observation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Observation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Observation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Observation(Observation other) : this() {
      id_ = other.id_;
      objects_ = other.objects_.Clone();
      features_ = other.features_.Clone();
      actions_ = other.actions_.Clone();
      sensors_ = other.sensors_.Clone();
      events_ = other.events_.Clone();
      terminal_ = other.terminal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Observation Clone() {
      return new Observation(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "objects" field.</summary>
    public const int ObjectsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Modl.Proto.ObjectVector> _repeated_objects_codec
        = pb::FieldCodec.ForMessage(18, global::Modl.Proto.ObjectVector.Parser);
    private readonly pbc::RepeatedField<global::Modl.Proto.ObjectVector> objects_ = new pbc::RepeatedField<global::Modl.Proto.ObjectVector>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Modl.Proto.ObjectVector> Objects {
      get { return objects_; }
    }

    /// <summary>Field number for the "features" field.</summary>
    public const int FeaturesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Modl.Proto.FeatureVector> _repeated_features_codec
        = pb::FieldCodec.ForMessage(26, global::Modl.Proto.FeatureVector.Parser);
    private readonly pbc::RepeatedField<global::Modl.Proto.FeatureVector> features_ = new pbc::RepeatedField<global::Modl.Proto.FeatureVector>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Modl.Proto.FeatureVector> Features {
      get { return features_; }
    }

    /// <summary>Field number for the "actions" field.</summary>
    public const int ActionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Modl.Proto.ActionVector> _repeated_actions_codec
        = pb::FieldCodec.ForMessage(34, global::Modl.Proto.ActionVector.Parser);
    private readonly pbc::RepeatedField<global::Modl.Proto.ActionVector> actions_ = new pbc::RepeatedField<global::Modl.Proto.ActionVector>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Modl.Proto.ActionVector> Actions {
      get { return actions_; }
    }

    /// <summary>Field number for the "sensors" field.</summary>
    public const int SensorsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Modl.Proto.SensorVector> _repeated_sensors_codec
        = pb::FieldCodec.ForMessage(42, global::Modl.Proto.SensorVector.Parser);
    private readonly pbc::RepeatedField<global::Modl.Proto.SensorVector> sensors_ = new pbc::RepeatedField<global::Modl.Proto.SensorVector>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Modl.Proto.SensorVector> Sensors {
      get { return sensors_; }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Modl.Proto.Event> _repeated_events_codec
        = pb::FieldCodec.ForMessage(50, global::Modl.Proto.Event.Parser);
    private readonly pbc::RepeatedField<global::Modl.Proto.Event> events_ = new pbc::RepeatedField<global::Modl.Proto.Event>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Modl.Proto.Event> Events {
      get { return events_; }
    }

    /// <summary>Field number for the "terminal" field.</summary>
    public const int TerminalFieldNumber = 7;
    private bool terminal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Terminal {
      get { return terminal_; }
      set {
        terminal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Observation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Observation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!objects_.Equals(other.objects_)) return false;
      if(!features_.Equals(other.features_)) return false;
      if(!actions_.Equals(other.actions_)) return false;
      if(!sensors_.Equals(other.sensors_)) return false;
      if(!events_.Equals(other.events_)) return false;
      if (Terminal != other.Terminal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= objects_.GetHashCode();
      hash ^= features_.GetHashCode();
      hash ^= actions_.GetHashCode();
      hash ^= sensors_.GetHashCode();
      hash ^= events_.GetHashCode();
      if (Terminal != false) hash ^= Terminal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      objects_.WriteTo(output, _repeated_objects_codec);
      features_.WriteTo(output, _repeated_features_codec);
      actions_.WriteTo(output, _repeated_actions_codec);
      sensors_.WriteTo(output, _repeated_sensors_codec);
      events_.WriteTo(output, _repeated_events_codec);
      if (Terminal != false) {
        output.WriteRawTag(56);
        output.WriteBool(Terminal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      objects_.WriteTo(ref output, _repeated_objects_codec);
      features_.WriteTo(ref output, _repeated_features_codec);
      actions_.WriteTo(ref output, _repeated_actions_codec);
      sensors_.WriteTo(ref output, _repeated_sensors_codec);
      events_.WriteTo(ref output, _repeated_events_codec);
      if (Terminal != false) {
        output.WriteRawTag(56);
        output.WriteBool(Terminal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += objects_.CalculateSize(_repeated_objects_codec);
      size += features_.CalculateSize(_repeated_features_codec);
      size += actions_.CalculateSize(_repeated_actions_codec);
      size += sensors_.CalculateSize(_repeated_sensors_codec);
      size += events_.CalculateSize(_repeated_events_codec);
      if (Terminal != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Observation other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      objects_.Add(other.objects_);
      features_.Add(other.features_);
      actions_.Add(other.actions_);
      sensors_.Add(other.sensors_);
      events_.Add(other.events_);
      if (other.Terminal != false) {
        Terminal = other.Terminal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            objects_.AddEntriesFrom(input, _repeated_objects_codec);
            break;
          }
          case 26: {
            features_.AddEntriesFrom(input, _repeated_features_codec);
            break;
          }
          case 34: {
            actions_.AddEntriesFrom(input, _repeated_actions_codec);
            break;
          }
          case 42: {
            sensors_.AddEntriesFrom(input, _repeated_sensors_codec);
            break;
          }
          case 50: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
          case 56: {
            Terminal = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            objects_.AddEntriesFrom(ref input, _repeated_objects_codec);
            break;
          }
          case 26: {
            features_.AddEntriesFrom(ref input, _repeated_features_codec);
            break;
          }
          case 34: {
            actions_.AddEntriesFrom(ref input, _repeated_actions_codec);
            break;
          }
          case 42: {
            sensors_.AddEntriesFrom(ref input, _repeated_sensors_codec);
            break;
          }
          case 50: {
            events_.AddEntriesFrom(ref input, _repeated_events_codec);
            break;
          }
          case 56: {
            Terminal = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Command : pb::IMessage<Command>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Command> _parser = new pb::MessageParser<Command>(() => new Command());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Command> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command(Command other) : this() {
      type_ = other.type_;
      actions_ = other.actions_.Clone();
      objects_ = other.objects_.Clone();
      obsId_ = other.obsId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command Clone() {
      return new Command(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Modl.Proto.Command.Types.Type type_ = global::Modl.Proto.Command.Types.Type.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Modl.Proto.Command.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "actions" field.</summary>
    public const int ActionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Modl.Proto.ActionVector> _repeated_actions_codec
        = pb::FieldCodec.ForMessage(18, global::Modl.Proto.ActionVector.Parser);
    private readonly pbc::RepeatedField<global::Modl.Proto.ActionVector> actions_ = new pbc::RepeatedField<global::Modl.Proto.ActionVector>();
    /// <summary>
    /// ACT
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Modl.Proto.ActionVector> Actions {
      get { return actions_; }
    }

    /// <summary>Field number for the "objects" field.</summary>
    public const int ObjectsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Modl.Proto.ObjectVector> _repeated_objects_codec
        = pb::FieldCodec.ForMessage(26, global::Modl.Proto.ObjectVector.Parser);
    private readonly pbc::RepeatedField<global::Modl.Proto.ObjectVector> objects_ = new pbc::RepeatedField<global::Modl.Proto.ObjectVector>();
    /// <summary>
    /// LOAD
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Modl.Proto.ObjectVector> Objects {
      get { return objects_; }
    }

    /// <summary>Field number for the "obs_id" field.</summary>
    public const int ObsIdFieldNumber = 4;
    private string obsId_ = "";
    /// <summary>
    /// LOAD
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ObsId {
      get { return obsId_; }
      set {
        obsId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Command);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Command other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!actions_.Equals(other.actions_)) return false;
      if(!objects_.Equals(other.objects_)) return false;
      if (ObsId != other.ObsId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Modl.Proto.Command.Types.Type.Unknown) hash ^= Type.GetHashCode();
      hash ^= actions_.GetHashCode();
      hash ^= objects_.GetHashCode();
      if (ObsId.Length != 0) hash ^= ObsId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Modl.Proto.Command.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      actions_.WriteTo(output, _repeated_actions_codec);
      objects_.WriteTo(output, _repeated_objects_codec);
      if (ObsId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ObsId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Modl.Proto.Command.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      actions_.WriteTo(ref output, _repeated_actions_codec);
      objects_.WriteTo(ref output, _repeated_objects_codec);
      if (ObsId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ObsId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Modl.Proto.Command.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += actions_.CalculateSize(_repeated_actions_codec);
      size += objects_.CalculateSize(_repeated_objects_codec);
      if (ObsId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ObsId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Command other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Modl.Proto.Command.Types.Type.Unknown) {
        Type = other.Type;
      }
      actions_.Add(other.actions_);
      objects_.Add(other.objects_);
      if (other.ObsId.Length != 0) {
        ObsId = other.ObsId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Modl.Proto.Command.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            actions_.AddEntriesFrom(input, _repeated_actions_codec);
            break;
          }
          case 26: {
            objects_.AddEntriesFrom(input, _repeated_objects_codec);
            break;
          }
          case 34: {
            ObsId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Modl.Proto.Command.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            actions_.AddEntriesFrom(ref input, _repeated_actions_codec);
            break;
          }
          case 26: {
            objects_.AddEntriesFrom(ref input, _repeated_objects_codec);
            break;
          }
          case 34: {
            ObsId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Command message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("ACT")] Act = 1,
        [pbr::OriginalName("LOAD")] Load = 2,
        [pbr::OriginalName("SAVE")] Save = 3,
        [pbr::OriginalName("SHUTDOWN")] Shutdown = 4,
      }

    }
    #endregion

  }

  public sealed partial class Initialization : pb::IMessage<Initialization>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Initialization> _parser = new pb::MessageParser<Initialization>(() => new Initialization());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Initialization> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Initialization() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Initialization(Initialization other) : this() {
      startingConditionId_ = other.startingConditionId_;
      heartbeatInterval_ = other.heartbeatInterval_;
      gameSpeed_ = other.gameSpeed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Initialization Clone() {
      return new Initialization(this);
    }

    /// <summary>Field number for the "starting_condition_id" field.</summary>
    public const int StartingConditionIdFieldNumber = 1;
    private string startingConditionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartingConditionId {
      get { return startingConditionId_; }
      set {
        startingConditionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "heartbeat_interval" field.</summary>
    public const int HeartbeatIntervalFieldNumber = 2;
    private float heartbeatInterval_;
    /// <summary>
    /// Number of seconds between heartbeat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float HeartbeatInterval {
      get { return heartbeatInterval_; }
      set {
        heartbeatInterval_ = value;
      }
    }

    /// <summary>Field number for the "game_speed" field.</summary>
    public const int GameSpeedFieldNumber = 3;
    private float gameSpeed_;
    /// <summary>
    /// A multiplier to speed up the game or slow it down
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float GameSpeed {
      get { return gameSpeed_; }
      set {
        gameSpeed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Initialization);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Initialization other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartingConditionId != other.StartingConditionId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HeartbeatInterval, other.HeartbeatInterval)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GameSpeed, other.GameSpeed)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartingConditionId.Length != 0) hash ^= StartingConditionId.GetHashCode();
      if (HeartbeatInterval != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HeartbeatInterval);
      if (GameSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GameSpeed);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StartingConditionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StartingConditionId);
      }
      if (HeartbeatInterval != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(HeartbeatInterval);
      }
      if (GameSpeed != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(GameSpeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StartingConditionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StartingConditionId);
      }
      if (HeartbeatInterval != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(HeartbeatInterval);
      }
      if (GameSpeed != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(GameSpeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartingConditionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartingConditionId);
      }
      if (HeartbeatInterval != 0F) {
        size += 1 + 4;
      }
      if (GameSpeed != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Initialization other) {
      if (other == null) {
        return;
      }
      if (other.StartingConditionId.Length != 0) {
        StartingConditionId = other.StartingConditionId;
      }
      if (other.HeartbeatInterval != 0F) {
        HeartbeatInterval = other.HeartbeatInterval;
      }
      if (other.GameSpeed != 0F) {
        GameSpeed = other.GameSpeed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StartingConditionId = input.ReadString();
            break;
          }
          case 21: {
            HeartbeatInterval = input.ReadFloat();
            break;
          }
          case 29: {
            GameSpeed = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StartingConditionId = input.ReadString();
            break;
          }
          case 21: {
            HeartbeatInterval = input.ReadFloat();
            break;
          }
          case 29: {
            GameSpeed = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ValueRange : pb::IMessage<ValueRange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ValueRange> _parser = new pb::MessageParser<ValueRange>(() => new ValueRange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ValueRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueRange(ValueRange other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      type_ = other.type_;
      dims_ = other.dims_.Clone();
      minValue_ = other.minValue_;
      maxValue_ = other.maxValue_;
      categories_ = other.categories_.Clone();
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueRange Clone() {
      return new ValueRange(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Unique identifier of the dimension
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Pretty name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Modl.Proto.ValueRange.Types.Type type_ = global::Modl.Proto.ValueRange.Types.Type.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Modl.Proto.ValueRange.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "dims" field.</summary>
    public const int DimsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Modl.Proto.ValueRange> _repeated_dims_codec
        = pb::FieldCodec.ForMessage(34, global::Modl.Proto.ValueRange.Parser);
    private readonly pbc::RepeatedField<global::Modl.Proto.ValueRange> dims_ = new pbc::RepeatedField<global::Modl.Proto.ValueRange>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Modl.Proto.ValueRange> Dims {
      get { return dims_; }
    }

    /// <summary>Field number for the "min_value" field.</summary>
    public const int MinValueFieldNumber = 5;
    private float minValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MinValue {
      get { return minValue_; }
      set {
        minValue_ = value;
      }
    }

    /// <summary>Field number for the "max_value" field.</summary>
    public const int MaxValueFieldNumber = 6;
    private float maxValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MaxValue {
      get { return maxValue_; }
      set {
        maxValue_ = value;
      }
    }

    /// <summary>Field number for the "categories" field.</summary>
    public const int CategoriesFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_categories_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> categories_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Categories {
      get { return categories_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// E.g. waypoint, player
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ValueRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ValueRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if(!dims_.Equals(other.dims_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinValue, other.MinValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxValue, other.MaxValue)) return false;
      if(!categories_.Equals(other.categories_)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::Modl.Proto.ValueRange.Types.Type.Unknown) hash ^= Type.GetHashCode();
      hash ^= dims_.GetHashCode();
      if (MinValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinValue);
      if (MaxValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxValue);
      hash ^= categories_.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != global::Modl.Proto.ValueRange.Types.Type.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      dims_.WriteTo(output, _repeated_dims_codec);
      if (MinValue != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(MinValue);
      }
      if (MaxValue != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(MaxValue);
      }
      categories_.WriteTo(output, _repeated_categories_codec);
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != global::Modl.Proto.ValueRange.Types.Type.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      dims_.WriteTo(ref output, _repeated_dims_codec);
      if (MinValue != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(MinValue);
      }
      if (MaxValue != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(MaxValue);
      }
      categories_.WriteTo(ref output, _repeated_categories_codec);
      tags_.WriteTo(ref output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::Modl.Proto.ValueRange.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += dims_.CalculateSize(_repeated_dims_codec);
      if (MinValue != 0F) {
        size += 1 + 4;
      }
      if (MaxValue != 0F) {
        size += 1 + 4;
      }
      size += categories_.CalculateSize(_repeated_categories_codec);
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ValueRange other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::Modl.Proto.ValueRange.Types.Type.Unknown) {
        Type = other.Type;
      }
      dims_.Add(other.dims_);
      if (other.MinValue != 0F) {
        MinValue = other.MinValue;
      }
      if (other.MaxValue != 0F) {
        MaxValue = other.MaxValue;
      }
      categories_.Add(other.categories_);
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Modl.Proto.ValueRange.Types.Type) input.ReadEnum();
            break;
          }
          case 34: {
            dims_.AddEntriesFrom(input, _repeated_dims_codec);
            break;
          }
          case 45: {
            MinValue = input.ReadFloat();
            break;
          }
          case 53: {
            MaxValue = input.ReadFloat();
            break;
          }
          case 58: {
            categories_.AddEntriesFrom(input, _repeated_categories_codec);
            break;
          }
          case 66: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Modl.Proto.ValueRange.Types.Type) input.ReadEnum();
            break;
          }
          case 34: {
            dims_.AddEntriesFrom(ref input, _repeated_dims_codec);
            break;
          }
          case 45: {
            MinValue = input.ReadFloat();
            break;
          }
          case 53: {
            MaxValue = input.ReadFloat();
            break;
          }
          case 58: {
            categories_.AddEntriesFrom(ref input, _repeated_categories_codec);
            break;
          }
          case 66: {
            tags_.AddEntriesFrom(ref input, _repeated_tags_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ValueRange message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("SPACE")] Space = 1,
        [pbr::OriginalName("DISCRETE_DIMENSION")] DiscreteDimension = 2,
        [pbr::OriginalName("CONTINUOUS_DIMENSION")] ContinuousDimension = 3,
        [pbr::OriginalName("BOOLEAN_DIMENSION")] BooleanDimension = 4,
        [pbr::OriginalName("CATEGORICAL_DIMENSION")] CategoricalDimension = 5,
        [pbr::OriginalName("STRING_DIMENSION")] StringDimension = 6,
      }

    }
    #endregion

  }

  public sealed partial class StartDef : pb::IMessage<StartDef>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StartDef> _parser = new pb::MessageParser<StartDef>(() => new StartDef());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartDef> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartDef() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartDef(StartDef other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartDef Clone() {
      return new StartDef(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartDef);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartDef other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartDef other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventDef : pb::IMessage<EventDef>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventDef> _parser = new pb::MessageParser<EventDef>(() => new EventDef());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventDef> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDef() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDef(EventDef other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDef Clone() {
      return new EventDef(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Modl.Proto.EventDef.Types.Type type_ = global::Modl.Proto.EventDef.Types.Type.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Modl.Proto.EventDef.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventDef);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventDef other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::Modl.Proto.EventDef.Types.Type.Unknown) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != global::Modl.Proto.EventDef.Types.Type.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != global::Modl.Proto.EventDef.Types.Type.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::Modl.Proto.EventDef.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventDef other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::Modl.Proto.EventDef.Types.Type.Unknown) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Modl.Proto.EventDef.Types.Type) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Modl.Proto.EventDef.Types.Type) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the EventDef message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("CUSTOM")] Custom = 1,
        [pbr::OriginalName("GLITCH")] Glitch = 2,
        [pbr::OriginalName("OBJECTIVE")] Objective = 3,
      }

    }
    #endregion

  }

  public sealed partial class GameConfig : pb::IMessage<GameConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameConfig> _parser = new pb::MessageParser<GameConfig>(() => new GameConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameConfig(GameConfig other) : this() {
      actionSpace_ = other.actionSpace_ != null ? other.actionSpace_.Clone() : null;
      featureSpace_ = other.featureSpace_ != null ? other.featureSpace_.Clone() : null;
      objectSpace_ = other.objectSpace_ != null ? other.objectSpace_.Clone() : null;
      sensorSpace_ = other.sensorSpace_ != null ? other.sensorSpace_.Clone() : null;
      eventDefs_ = other.eventDefs_.Clone();
      startDefs_ = other.startDefs_.Clone();
      featureGranularity_ = other.featureGranularity_.Clone();
      minFps_ = other.minFps_;
      brainVersion_ = other.brainVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameConfig Clone() {
      return new GameConfig(this);
    }

    /// <summary>Field number for the "action_space" field.</summary>
    public const int ActionSpaceFieldNumber = 1;
    private global::Modl.Proto.ValueRange actionSpace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Modl.Proto.ValueRange ActionSpace {
      get { return actionSpace_; }
      set {
        actionSpace_ = value;
      }
    }

    /// <summary>Field number for the "feature_space" field.</summary>
    public const int FeatureSpaceFieldNumber = 2;
    private global::Modl.Proto.ValueRange featureSpace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Modl.Proto.ValueRange FeatureSpace {
      get { return featureSpace_; }
      set {
        featureSpace_ = value;
      }
    }

    /// <summary>Field number for the "object_space" field.</summary>
    public const int ObjectSpaceFieldNumber = 3;
    private global::Modl.Proto.ValueRange objectSpace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Modl.Proto.ValueRange ObjectSpace {
      get { return objectSpace_; }
      set {
        objectSpace_ = value;
      }
    }

    /// <summary>Field number for the "sensor_space" field.</summary>
    public const int SensorSpaceFieldNumber = 4;
    private global::Modl.Proto.ValueRange sensorSpace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Modl.Proto.ValueRange SensorSpace {
      get { return sensorSpace_; }
      set {
        sensorSpace_ = value;
      }
    }

    /// <summary>Field number for the "event_defs" field.</summary>
    public const int EventDefsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Modl.Proto.EventDef> _repeated_eventDefs_codec
        = pb::FieldCodec.ForMessage(42, global::Modl.Proto.EventDef.Parser);
    private readonly pbc::RepeatedField<global::Modl.Proto.EventDef> eventDefs_ = new pbc::RepeatedField<global::Modl.Proto.EventDef>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Modl.Proto.EventDef> EventDefs {
      get { return eventDefs_; }
    }

    /// <summary>Field number for the "start_defs" field.</summary>
    public const int StartDefsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Modl.Proto.StartDef> _repeated_startDefs_codec
        = pb::FieldCodec.ForMessage(50, global::Modl.Proto.StartDef.Parser);
    private readonly pbc::RepeatedField<global::Modl.Proto.StartDef> startDefs_ = new pbc::RepeatedField<global::Modl.Proto.StartDef>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Modl.Proto.StartDef> StartDefs {
      get { return startDefs_; }
    }

    /// <summary>Field number for the "feature_granularity" field.</summary>
    public const int FeatureGranularityFieldNumber = 7;
    private static readonly pb::FieldCodec<float> _repeated_featureGranularity_codec
        = pb::FieldCodec.ForFloat(58);
    private readonly pbc::RepeatedField<float> featureGranularity_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> FeatureGranularity {
      get { return featureGranularity_; }
    }

    /// <summary>Field number for the "min_fps" field.</summary>
    public const int MinFpsFieldNumber = 8;
    private float minFps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MinFps {
      get { return minFps_; }
      set {
        minFps_ = value;
      }
    }

    /// <summary>Field number for the "brain_version" field.</summary>
    public const int BrainVersionFieldNumber = 9;
    private string brainVersion_ = "";
    /// <summary>
    /// E.g. "3.14.1" or "3.14.1-my_branch"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BrainVersion {
      get { return brainVersion_; }
      set {
        brainVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ActionSpace, other.ActionSpace)) return false;
      if (!object.Equals(FeatureSpace, other.FeatureSpace)) return false;
      if (!object.Equals(ObjectSpace, other.ObjectSpace)) return false;
      if (!object.Equals(SensorSpace, other.SensorSpace)) return false;
      if(!eventDefs_.Equals(other.eventDefs_)) return false;
      if(!startDefs_.Equals(other.startDefs_)) return false;
      if(!featureGranularity_.Equals(other.featureGranularity_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinFps, other.MinFps)) return false;
      if (BrainVersion != other.BrainVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (actionSpace_ != null) hash ^= ActionSpace.GetHashCode();
      if (featureSpace_ != null) hash ^= FeatureSpace.GetHashCode();
      if (objectSpace_ != null) hash ^= ObjectSpace.GetHashCode();
      if (sensorSpace_ != null) hash ^= SensorSpace.GetHashCode();
      hash ^= eventDefs_.GetHashCode();
      hash ^= startDefs_.GetHashCode();
      hash ^= featureGranularity_.GetHashCode();
      if (MinFps != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinFps);
      if (BrainVersion.Length != 0) hash ^= BrainVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (actionSpace_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ActionSpace);
      }
      if (featureSpace_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FeatureSpace);
      }
      if (objectSpace_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ObjectSpace);
      }
      if (sensorSpace_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SensorSpace);
      }
      eventDefs_.WriteTo(output, _repeated_eventDefs_codec);
      startDefs_.WriteTo(output, _repeated_startDefs_codec);
      featureGranularity_.WriteTo(output, _repeated_featureGranularity_codec);
      if (MinFps != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(MinFps);
      }
      if (BrainVersion.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(BrainVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (actionSpace_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ActionSpace);
      }
      if (featureSpace_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FeatureSpace);
      }
      if (objectSpace_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ObjectSpace);
      }
      if (sensorSpace_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SensorSpace);
      }
      eventDefs_.WriteTo(ref output, _repeated_eventDefs_codec);
      startDefs_.WriteTo(ref output, _repeated_startDefs_codec);
      featureGranularity_.WriteTo(ref output, _repeated_featureGranularity_codec);
      if (MinFps != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(MinFps);
      }
      if (BrainVersion.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(BrainVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (actionSpace_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActionSpace);
      }
      if (featureSpace_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FeatureSpace);
      }
      if (objectSpace_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectSpace);
      }
      if (sensorSpace_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SensorSpace);
      }
      size += eventDefs_.CalculateSize(_repeated_eventDefs_codec);
      size += startDefs_.CalculateSize(_repeated_startDefs_codec);
      size += featureGranularity_.CalculateSize(_repeated_featureGranularity_codec);
      if (MinFps != 0F) {
        size += 1 + 4;
      }
      if (BrainVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BrainVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameConfig other) {
      if (other == null) {
        return;
      }
      if (other.actionSpace_ != null) {
        if (actionSpace_ == null) {
          ActionSpace = new global::Modl.Proto.ValueRange();
        }
        ActionSpace.MergeFrom(other.ActionSpace);
      }
      if (other.featureSpace_ != null) {
        if (featureSpace_ == null) {
          FeatureSpace = new global::Modl.Proto.ValueRange();
        }
        FeatureSpace.MergeFrom(other.FeatureSpace);
      }
      if (other.objectSpace_ != null) {
        if (objectSpace_ == null) {
          ObjectSpace = new global::Modl.Proto.ValueRange();
        }
        ObjectSpace.MergeFrom(other.ObjectSpace);
      }
      if (other.sensorSpace_ != null) {
        if (sensorSpace_ == null) {
          SensorSpace = new global::Modl.Proto.ValueRange();
        }
        SensorSpace.MergeFrom(other.SensorSpace);
      }
      eventDefs_.Add(other.eventDefs_);
      startDefs_.Add(other.startDefs_);
      featureGranularity_.Add(other.featureGranularity_);
      if (other.MinFps != 0F) {
        MinFps = other.MinFps;
      }
      if (other.BrainVersion.Length != 0) {
        BrainVersion = other.BrainVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (actionSpace_ == null) {
              ActionSpace = new global::Modl.Proto.ValueRange();
            }
            input.ReadMessage(ActionSpace);
            break;
          }
          case 18: {
            if (featureSpace_ == null) {
              FeatureSpace = new global::Modl.Proto.ValueRange();
            }
            input.ReadMessage(FeatureSpace);
            break;
          }
          case 26: {
            if (objectSpace_ == null) {
              ObjectSpace = new global::Modl.Proto.ValueRange();
            }
            input.ReadMessage(ObjectSpace);
            break;
          }
          case 34: {
            if (sensorSpace_ == null) {
              SensorSpace = new global::Modl.Proto.ValueRange();
            }
            input.ReadMessage(SensorSpace);
            break;
          }
          case 42: {
            eventDefs_.AddEntriesFrom(input, _repeated_eventDefs_codec);
            break;
          }
          case 50: {
            startDefs_.AddEntriesFrom(input, _repeated_startDefs_codec);
            break;
          }
          case 58:
          case 61: {
            featureGranularity_.AddEntriesFrom(input, _repeated_featureGranularity_codec);
            break;
          }
          case 69: {
            MinFps = input.ReadFloat();
            break;
          }
          case 74: {
            BrainVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (actionSpace_ == null) {
              ActionSpace = new global::Modl.Proto.ValueRange();
            }
            input.ReadMessage(ActionSpace);
            break;
          }
          case 18: {
            if (featureSpace_ == null) {
              FeatureSpace = new global::Modl.Proto.ValueRange();
            }
            input.ReadMessage(FeatureSpace);
            break;
          }
          case 26: {
            if (objectSpace_ == null) {
              ObjectSpace = new global::Modl.Proto.ValueRange();
            }
            input.ReadMessage(ObjectSpace);
            break;
          }
          case 34: {
            if (sensorSpace_ == null) {
              SensorSpace = new global::Modl.Proto.ValueRange();
            }
            input.ReadMessage(SensorSpace);
            break;
          }
          case 42: {
            eventDefs_.AddEntriesFrom(ref input, _repeated_eventDefs_codec);
            break;
          }
          case 50: {
            startDefs_.AddEntriesFrom(ref input, _repeated_startDefs_codec);
            break;
          }
          case 58:
          case 61: {
            featureGranularity_.AddEntriesFrom(ref input, _repeated_featureGranularity_codec);
            break;
          }
          case 69: {
            MinFps = input.ReadFloat();
            break;
          }
          case 74: {
            BrainVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Environment : pb::IMessage<Environment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Environment> _parser = new pb::MessageParser<Environment>(() => new Environment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Environment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Environment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Environment(Environment other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Environment Clone() {
      return new Environment(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Modl.Proto.Environment.Types.Type type_ = global::Modl.Proto.Environment.Types.Type.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Modl.Proto.Environment.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Struct config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Environment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Environment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::Modl.Proto.Environment.Types.Type.Unknown) hash ^= Type.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::Modl.Proto.Environment.Types.Type.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (config_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::Modl.Proto.Environment.Types.Type.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (config_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::Modl.Proto.Environment.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Environment other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::Modl.Proto.Environment.Types.Type.Unknown) {
        Type = other.Type;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Modl.Proto.Environment.Types.Type) input.ReadEnum();
            break;
          }
          case 98: {
            if (config_ == null) {
              Config = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Modl.Proto.Environment.Types.Type) input.ReadEnum();
            break;
          }
          case 98: {
            if (config_ == null) {
              Config = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Environment message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("REMOTE")] Remote = 1,
        [pbr::OriginalName("INTERNAL")] Internal = 2,
      }

    }
    #endregion

  }

  public sealed partial class Algorithm : pb::IMessage<Algorithm>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Algorithm> _parser = new pb::MessageParser<Algorithm>(() => new Algorithm());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Algorithm> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Algorithm() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Algorithm(Algorithm other) : this() {
      name_ = other.name_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Algorithm Clone() {
      return new Algorithm(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Algorithm);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Algorithm other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Algorithm other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Profiler : pb::IMessage<Profiler>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Profiler> _parser = new pb::MessageParser<Profiler>(() => new Profiler());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Profiler> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Profiler() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Profiler(Profiler other) : this() {
      enabled_ = other.enabled_;
      port_ = other.port_;
      file_ = other.file_;
      frequency_ = other.frequency_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Profiler Clone() {
      return new Profiler(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private bool enabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 3;
    private string file_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string File {
      get { return file_; }
      set {
        file_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "frequency" field.</summary>
    public const int FrequencyFieldNumber = 4;
    private int frequency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Frequency {
      get { return frequency_; }
      set {
        frequency_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Profiler);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Profiler other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      if (Port != other.Port) return false;
      if (File != other.File) return false;
      if (Frequency != other.Frequency) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (File.Length != 0) hash ^= File.GetHashCode();
      if (Frequency != 0) hash ^= Frequency.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Enabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (File.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(File);
      }
      if (Frequency != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Frequency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Enabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (File.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(File);
      }
      if (Frequency != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Frequency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (File.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(File);
      }
      if (Frequency != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Frequency);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Profiler other) {
      if (other == null) {
        return;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.File.Length != 0) {
        File = other.File;
      }
      if (other.Frequency != 0) {
        Frequency = other.Frequency;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            File = input.ReadString();
            break;
          }
          case 32: {
            Frequency = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            File = input.ReadString();
            break;
          }
          case 32: {
            Frequency = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Run : pb::IMessage<Run>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Run> _parser = new pb::MessageParser<Run>(() => new Run());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Run> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Run() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Run(Run other) : this() {
      seconds_ = other.seconds_;
      environment_ = other.environment_ != null ? other.environment_.Clone() : null;
      algorithm_ = other.algorithm_ != null ? other.algorithm_.Clone() : null;
      profiler_ = other.profiler_ != null ? other.profiler_.Clone() : null;
      seed_ = other.seed_;
      gpu_ = other.gpu_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Run Clone() {
      return new Run(this);
    }

    /// <summary>Field number for the "seconds" field.</summary>
    public const int SecondsFieldNumber = 1;
    private int seconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Seconds {
      get { return seconds_; }
      set {
        seconds_ = value;
      }
    }

    /// <summary>Field number for the "environment" field.</summary>
    public const int EnvironmentFieldNumber = 2;
    private global::Modl.Proto.Environment environment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Modl.Proto.Environment Environment {
      get { return environment_; }
      set {
        environment_ = value;
      }
    }

    /// <summary>Field number for the "algorithm" field.</summary>
    public const int AlgorithmFieldNumber = 3;
    private global::Modl.Proto.Algorithm algorithm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Modl.Proto.Algorithm Algorithm {
      get { return algorithm_; }
      set {
        algorithm_ = value;
      }
    }

    /// <summary>Field number for the "profiler" field.</summary>
    public const int ProfilerFieldNumber = 4;
    private global::Modl.Proto.Profiler profiler_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Modl.Proto.Profiler Profiler {
      get { return profiler_; }
      set {
        profiler_ = value;
      }
    }

    /// <summary>Field number for the "seed" field.</summary>
    public const int SeedFieldNumber = 5;
    private int seed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Seed {
      get { return seed_; }
      set {
        seed_ = value;
      }
    }

    /// <summary>Field number for the "gpu" field.</summary>
    public const int GpuFieldNumber = 6;
    private bool gpu_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Gpu {
      get { return gpu_; }
      set {
        gpu_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Run);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Run other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seconds != other.Seconds) return false;
      if (!object.Equals(Environment, other.Environment)) return false;
      if (!object.Equals(Algorithm, other.Algorithm)) return false;
      if (!object.Equals(Profiler, other.Profiler)) return false;
      if (Seed != other.Seed) return false;
      if (Gpu != other.Gpu) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Seconds != 0) hash ^= Seconds.GetHashCode();
      if (environment_ != null) hash ^= Environment.GetHashCode();
      if (algorithm_ != null) hash ^= Algorithm.GetHashCode();
      if (profiler_ != null) hash ^= Profiler.GetHashCode();
      if (Seed != 0) hash ^= Seed.GetHashCode();
      if (Gpu != false) hash ^= Gpu.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Seconds != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Seconds);
      }
      if (environment_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Environment);
      }
      if (algorithm_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Algorithm);
      }
      if (profiler_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Profiler);
      }
      if (Seed != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Seed);
      }
      if (Gpu != false) {
        output.WriteRawTag(48);
        output.WriteBool(Gpu);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Seconds != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Seconds);
      }
      if (environment_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Environment);
      }
      if (algorithm_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Algorithm);
      }
      if (profiler_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Profiler);
      }
      if (Seed != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Seed);
      }
      if (Gpu != false) {
        output.WriteRawTag(48);
        output.WriteBool(Gpu);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Seconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seconds);
      }
      if (environment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Environment);
      }
      if (algorithm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Algorithm);
      }
      if (profiler_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Profiler);
      }
      if (Seed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seed);
      }
      if (Gpu != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Run other) {
      if (other == null) {
        return;
      }
      if (other.Seconds != 0) {
        Seconds = other.Seconds;
      }
      if (other.environment_ != null) {
        if (environment_ == null) {
          Environment = new global::Modl.Proto.Environment();
        }
        Environment.MergeFrom(other.Environment);
      }
      if (other.algorithm_ != null) {
        if (algorithm_ == null) {
          Algorithm = new global::Modl.Proto.Algorithm();
        }
        Algorithm.MergeFrom(other.Algorithm);
      }
      if (other.profiler_ != null) {
        if (profiler_ == null) {
          Profiler = new global::Modl.Proto.Profiler();
        }
        Profiler.MergeFrom(other.Profiler);
      }
      if (other.Seed != 0) {
        Seed = other.Seed;
      }
      if (other.Gpu != false) {
        Gpu = other.Gpu;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seconds = input.ReadInt32();
            break;
          }
          case 18: {
            if (environment_ == null) {
              Environment = new global::Modl.Proto.Environment();
            }
            input.ReadMessage(Environment);
            break;
          }
          case 26: {
            if (algorithm_ == null) {
              Algorithm = new global::Modl.Proto.Algorithm();
            }
            input.ReadMessage(Algorithm);
            break;
          }
          case 34: {
            if (profiler_ == null) {
              Profiler = new global::Modl.Proto.Profiler();
            }
            input.ReadMessage(Profiler);
            break;
          }
          case 40: {
            Seed = input.ReadInt32();
            break;
          }
          case 48: {
            Gpu = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seconds = input.ReadInt32();
            break;
          }
          case 18: {
            if (environment_ == null) {
              Environment = new global::Modl.Proto.Environment();
            }
            input.ReadMessage(Environment);
            break;
          }
          case 26: {
            if (algorithm_ == null) {
              Algorithm = new global::Modl.Proto.Algorithm();
            }
            input.ReadMessage(Algorithm);
            break;
          }
          case 34: {
            if (profiler_ == null) {
              Profiler = new global::Modl.Proto.Profiler();
            }
            input.ReadMessage(Profiler);
            break;
          }
          case 40: {
            Seed = input.ReadInt32();
            break;
          }
          case 48: {
            Gpu = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TestConfig : pb::IMessage<TestConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TestConfig> _parser = new pb::MessageParser<TestConfig>(() => new TestConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestConfig(TestConfig other) : this() {
      run_ = other.run_ != null ? other.run_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestConfig Clone() {
      return new TestConfig(this);
    }

    /// <summary>Field number for the "run" field.</summary>
    public const int RunFieldNumber = 1;
    private global::Modl.Proto.Run run_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Modl.Proto.Run Run {
      get { return run_; }
      set {
        run_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Run, other.Run)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (run_ != null) hash ^= Run.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (run_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Run);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (run_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Run);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (run_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Run);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestConfig other) {
      if (other == null) {
        return;
      }
      if (other.run_ != null) {
        if (run_ == null) {
          Run = new global::Modl.Proto.Run();
        }
        Run.MergeFrom(other.Run);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (run_ == null) {
              Run = new global::Modl.Proto.Run();
            }
            input.ReadMessage(Run);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (run_ == null) {
              Run = new global::Modl.Proto.Run();
            }
            input.ReadMessage(Run);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SharedEntry : pb::IMessage<SharedEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SharedEntry> _parser = new pb::MessageParser<SharedEntry>(() => new SharedEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SharedEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modl.Proto.BrainReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SharedEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SharedEntry(SharedEntry other) : this() {
      entryId_ = other.entryId_;
      observation_ = other.observation_ != null ? other.observation_.Clone() : null;
      actions_ = other.actions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SharedEntry Clone() {
      return new SharedEntry(this);
    }

    /// <summary>Field number for the "entry_id" field.</summary>
    public const int EntryIdFieldNumber = 1;
    private string entryId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntryId {
      get { return entryId_; }
      set {
        entryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "observation" field.</summary>
    public const int ObservationFieldNumber = 2;
    private global::Modl.Proto.Observation observation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Modl.Proto.Observation Observation {
      get { return observation_; }
      set {
        observation_ = value;
      }
    }

    /// <summary>Field number for the "actions" field.</summary>
    public const int ActionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Modl.Proto.ActionVector> _repeated_actions_codec
        = pb::FieldCodec.ForMessage(26, global::Modl.Proto.ActionVector.Parser);
    private readonly pbc::RepeatedField<global::Modl.Proto.ActionVector> actions_ = new pbc::RepeatedField<global::Modl.Proto.ActionVector>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Modl.Proto.ActionVector> Actions {
      get { return actions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SharedEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SharedEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntryId != other.EntryId) return false;
      if (!object.Equals(Observation, other.Observation)) return false;
      if(!actions_.Equals(other.actions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EntryId.Length != 0) hash ^= EntryId.GetHashCode();
      if (observation_ != null) hash ^= Observation.GetHashCode();
      hash ^= actions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EntryId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EntryId);
      }
      if (observation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Observation);
      }
      actions_.WriteTo(output, _repeated_actions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EntryId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EntryId);
      }
      if (observation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Observation);
      }
      actions_.WriteTo(ref output, _repeated_actions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EntryId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntryId);
      }
      if (observation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Observation);
      }
      size += actions_.CalculateSize(_repeated_actions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SharedEntry other) {
      if (other == null) {
        return;
      }
      if (other.EntryId.Length != 0) {
        EntryId = other.EntryId;
      }
      if (other.observation_ != null) {
        if (observation_ == null) {
          Observation = new global::Modl.Proto.Observation();
        }
        Observation.MergeFrom(other.Observation);
      }
      actions_.Add(other.actions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EntryId = input.ReadString();
            break;
          }
          case 18: {
            if (observation_ == null) {
              Observation = new global::Modl.Proto.Observation();
            }
            input.ReadMessage(Observation);
            break;
          }
          case 26: {
            actions_.AddEntriesFrom(input, _repeated_actions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EntryId = input.ReadString();
            break;
          }
          case 18: {
            if (observation_ == null) {
              Observation = new global::Modl.Proto.Observation();
            }
            input.ReadMessage(Observation);
            break;
          }
          case 26: {
            actions_.AddEntriesFrom(ref input, _repeated_actions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
